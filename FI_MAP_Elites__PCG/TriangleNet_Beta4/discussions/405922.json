[
  {
    "Id": "952723",
    "ThreadId": "405922",
    "Html": "\r\n<p>I have a lot of Triangulation Problems.</p>\r\n<p>endless loops, out of memory, null or write input geometrie to poly file and read it back it works. Code is at the end. it will be nice when add this code to FileWriter (for Debugging).</p>\r\n<p>i can create test .poly files from me 3D data if you want ?? !!</p>\r\n<p>in same cases.</p>\r\n<p>but i see i the code</p>\r\n<p>behavior.Algorithm&nbsp;==&nbsp;<span style=\"color:#2b91af\">TriangulationAlgorithm</span>.Dwyer behavior.Algorithm&nbsp;==&nbsp;<span style=\"color:#2b91af\">TriangulationAlgorithm</span>.SweepLine</p>\r\n<p>the default is Dwyer but i can not change this from user code.</p>\r\n<p>i have changed your code the default to use SweepLine and alle problems go away.</p>\r\n<p>can you add a option to change the <span style=\"color:#2b91af\"><span style=\"color:#000000\">TriangulationAlgorithm ?? !!</span></span></p>\r\n<p>&nbsp;</p>\r\n<p>An other question is what do you doing with the attributes in points. this is a double array.</p>\r\n<p>will be this attributes in the mesh triangles ?? when i write a z value in one attribute - is this</p>\r\n<p>z value in the triangle ? but when you add a new vertex - z value linear interpolated ?</p>\r\n<p>&nbsp;</p>\r\n<p>sorry my english is not so good.</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>Code</p>\r\n<p>----------------------------------------</p>\r\n<p>&nbsp;</p>\r\n<pre style=\"font-family:Consolas; font-size:13; color:black; background:white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">public</span>&nbsp;<span style=\"color:blue\">static</span>&nbsp;<span style=\"color:blue\">void</span>&nbsp;Write(<span style=\"color:#2b91af\">InputGeometry</span>&nbsp;geo,&nbsp;<span style=\"color:blue\">string</span>&nbsp;filename)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">using</span>&nbsp;(<span style=\"color:#2b91af\">StreamWriter</span>&nbsp;writer&nbsp;=&nbsp;<span style=\"color:blue\">new</span>&nbsp;<span style=\"color:#2b91af\">StreamWriter</span>(filename))\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">int</span>&nbsp;invertices&nbsp;=&nbsp;0;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;invertices&nbsp;=&nbsp;geo.points.Count;\r\n \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">int</span>&nbsp;dimensions&nbsp;=&nbsp;2;\r\n \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">int</span>&nbsp;startedge&nbsp;=&nbsp;1;\r\n \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">double</span>[]&nbsp;attribs&nbsp;=&nbsp;geo.points[0].attributes;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">int</span>&nbsp;attributes&nbsp;=&nbsp;0;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">if</span>&nbsp;(attribs&nbsp;!=&nbsp;<span style=\"color:blue\">null</span>)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attributes&nbsp;=&nbsp;attribs.Length;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">int</span>&nbsp;nodemarkers&nbsp;=&nbsp;1;\r\n \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writer.WriteLine(<span style=\"color:#a31515\">&quot;</span><span style=\"color:mediumseagreen\">{0}</span><span style=\"color:#a31515\">&nbsp;</span><span style=\"color:mediumseagreen\">{1}</span><span style=\"color:#a31515\">&nbsp;</span><span style=\"color:mediumseagreen\">{2}</span><span style=\"color:#a31515\">&nbsp;</span><span style=\"color:mediumseagreen\">{3}</span><span style=\"color:#a31515\">&quot;</span>,&nbsp;invertices,&nbsp;dimensions,&nbsp;attributes,&nbsp;nodemarkers);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">int</span>&nbsp;ii&nbsp;=&nbsp;1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">foreach</span>&nbsp;(<span style=\"color:blue\">var</span>&nbsp;pt&nbsp;<span style=\"color:blue\">in</span>&nbsp;geo.Points)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af\">String</span>&nbsp;str&nbsp;=&nbsp;<span style=\"color:#a31515\">&quot;&quot;</span>;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">if</span>&nbsp;(attributes&nbsp;&gt;&nbsp;0)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">foreach</span>&nbsp;(<span style=\"color:blue\">var</span>&nbsp;attr&nbsp;<span style=\"color:blue\">in</span>&nbsp;pt.attributes)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">if</span>&nbsp;(str.Length&nbsp;&gt;&nbsp;0)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;=&nbsp;str&nbsp;&#43;&nbsp;<span style=\"color:#a31515\">&quot;&nbsp;&quot;</span>;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;=&nbsp;str&nbsp;&#43;&nbsp;attr;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">if</span>&nbsp;(str.Length&nbsp;&gt;&nbsp;0)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;=&nbsp;str&nbsp;&#43;&nbsp;<span style=\"color:#a31515\">&quot;&nbsp;&quot;</span>;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;=&nbsp;str&nbsp;&#43;&nbsp;pt.mark;\r\n \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writer.WriteLine(<span style=\"color:#a31515\">&quot;</span><span style=\"color:mediumseagreen\">{0}</span><span style=\"color:#a31515\">&nbsp;</span><span style=\"color:mediumseagreen\">{1}</span><span style=\"color:#a31515\">&nbsp;</span><span style=\"color:mediumseagreen\">{2}</span><span style=\"color:#a31515\">&nbsp;</span><span style=\"color:mediumseagreen\">{3}</span><span style=\"color:#a31515\">&quot;</span>,&nbsp;ii,&nbsp;pt.X.ToString(nfi),&nbsp;pt.Y.ToString(nfi),&nbsp;str);\r\n \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ii&#43;&#43;;\r\n \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n \r\n<span style=\"color:green\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writer.WriteLine(&quot;&quot;);</span>\r\n \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">int</span>&nbsp;insegments&nbsp;=&nbsp;0;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;insegments&nbsp;=&nbsp;geo.Segments.Count;\r\n \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">int</span>&nbsp;segmentmarkers&nbsp;=&nbsp;1;\r\n \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writer.WriteLine(<span style=\"color:#a31515\">&quot;</span><span style=\"color:mediumseagreen\">{0}</span><span style=\"color:#a31515\">&nbsp;</span><span style=\"color:mediumseagreen\">{1}</span><span style=\"color:#a31515\">&quot;</span>,&nbsp;insegments,&nbsp;segmentmarkers);\r\n \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ii&nbsp;=&nbsp;startedge;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">foreach</span>&nbsp;(<span style=\"color:blue\">var</span>&nbsp;edge&nbsp;<span style=\"color:blue\">in</span>&nbsp;geo.Segments)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writer.WriteLine(<span style=\"color:#a31515\">&quot;</span><span style=\"color:mediumseagreen\">{0}</span><span style=\"color:#a31515\">&nbsp;</span><span style=\"color:mediumseagreen\">{1}</span><span style=\"color:#a31515\">&nbsp;</span><span style=\"color:mediumseagreen\">{2}</span><span style=\"color:#a31515\">&nbsp;</span><span style=\"color:mediumseagreen\">{3}</span><span style=\"color:#a31515\">&quot;</span>,&nbsp;ii,edge.P0&#43;1,edge.P1&#43;1,edge.Boundary);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ii&#43;&#43;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n \r\n<span style=\"color:green\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writer.WriteLine(&quot;&quot;);</span>\r\n \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">int</span>&nbsp;holes&nbsp;=&nbsp;0;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;holes&nbsp;=&nbsp;geo.Holes.Count;\r\n \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writer.WriteLine(<span style=\"color:#a31515\">&quot;</span><span style=\"color:mediumseagreen\">{0}</span><span style=\"color:#a31515\">&quot;</span>,&nbsp;holes);\r\n \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ii&nbsp;=&nbsp;1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:blue\">foreach</span>&nbsp;(<span style=\"color:blue\">var</span>&nbsp;hole&nbsp;<span style=\"color:blue\">in</span>&nbsp;geo.Holes)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writer.WriteLine(<span style=\"color:#a31515\">&quot;</span><span style=\"color:mediumseagreen\">{0}</span><span style=\"color:#a31515\">&nbsp;</span><span style=\"color:mediumseagreen\">{1}</span><span style=\"color:#a31515\">&nbsp;</span><span style=\"color:mediumseagreen\">{2}</span><span style=\"color:#a31515\">&quot;</span>,&nbsp;ii,&nbsp;hole.X.ToString(nfi),&nbsp;hole.Y.ToString(nfi));\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <br></pre>\r\n",
    "PostedDate": "2012-12-06T23:27:20.41-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "952779",
    "ThreadId": "405922",
    "Html": "\r\n<ol>\r\n<li>If not too large, post the geometry data here. Otherwise send the poly files to\r\n<em>[deleted]</em> </li><li>I will add an option to change the triangulation algorithm like<br>\r\n<pre>mesh.SetOption(Options.TriangulationAlgorithm, TriangulationAlgorithm.SweepLine)</pre>\r\n</li><li>In the test app there's a class <em>MeshExplorer.IO.GeometryWriter</em> which you can use to write input geomtries. Just copy this file to your projects and you should be fine. I don't intend to add this to the library...\r\n</li><li>Point attributes are working exactly the way you described it (linear interpolation).\r\n</li></ol>\r\n",
    "PostedDate": "2012-12-07T01:42:57.663-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "952818",
    "ThreadId": "405922",
    "Html": "\r\n<p>1. Ok -- i send a mail</p>\r\n<p>2. nice</p>\r\n<p>3. sorry i download the newest revision 71203 and search <em>GeometryWriter - but i can not find !?</em></p>\r\n<p><em>4. very nice -- my first code i translate and rotate all the surface in xy plane -&gt; triangulate -&gt; rotate, translate triangles and generate OpenGL triangles</em></p>\r\n<p><em>&nbsp; second i swap the x,y,z by the normale direction and write one coordinate to attributes -&gt;\r\n</em><em>triangulate -&gt; swap coordinates back and generate OpenGL triangles</em></p>\r\n<p><em>this needs only 500ms less time than the translate and rotate code (by 13200 polygons 1100 holes and 70000 vertices)\r\n</em></p>\r\n<p><em>Tesslation over (only mesh.</em>Triangulate(data)) 4000ms</p>\r\n",
    "PostedDate": "2012-12-07T03:03:41.823-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "952888",
    "ThreadId": "405922",
    "Html": "\r\n<p>Hadn't checked in the <em>GeometryWriter</em>, should be online with the latest changeset.</p>\r\n<p>Thanks for sending the poly file. It's a bug in Dwyer.cs, the triangulation is not correct. The actual exception is then thrown while trying to insert the segments later on. Maybe I'll find some time this weekend to track it down.</p>\r\n<p>Seems it's the special alternating sort which is messed up. You can disable it in Dwyer.cs by setting</p>\r\n<pre>bool useDwyer = false;</pre>\r\n<p>Let me know if that solves the issue or if there are still geometries that fail.</p>\r\n",
    "PostedDate": "2012-12-07T05:20:32.103-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "952899",
    "ThreadId": "405922",
    "Html": "\r\n<p>no</p>\r\n<p>but thanks for the other changes</p>\r\n<p>i mail a screenshot from the backtrace</p>\r\n",
    "PostedDate": "2012-12-07T05:31:31.127-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "952911",
    "ThreadId": "405922",
    "Html": "\r\n<p>Ok, since the first poly file you sent me works when setting useDwyer = false, could you send another file which does not work.</p>\r\n<p>Thanks again for your help!</p>\r\n",
    "PostedDate": "2012-12-07T06:06:28.04-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "953306",
    "ThreadId": "405922",
    "Html": "\r\n<p>So, this does not seem to be a problem of the triangulation algorithm, but a problem of floating point precision. I added higher precision primitives in the latest changeset, but this of course doesn't solve the actual problem. Let me know if the problems\r\n reside!</p>\r\n<p>I don't plan to implement robust floating point arithmetics (it would be a major effort). Read more about it at\r\n<a href=\"http://www.cs.cmu.edu/~quake/robust.html\">http://www.cs.cmu.edu/~quake/robust.html</a></p>\r\n<p>BTW: you sent a mail with subject <em>OutofMemory with SweepLine</em>. I could not reproduce any out of memory exception!?</p>\r\n",
    "PostedDate": "2012-12-08T07:16:14.97-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]