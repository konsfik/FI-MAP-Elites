[
  {
    "Id": "1431682",
    "ThreadId": "640393",
    "Html": "Hey there, <br />\n<br />\ncould you show me how to draw the triangles without drawing double lines?<br />\nWhen I draw every single segment of the &quot;mesh.Triangles()&quot; there will be overlapping lines or not?<br />\n<br />\nThanks imn advance!<br />\n",
    "PostedDate": "2015-06-24T03:41:53.1-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1431698",
    "ThreadId": "640393",
    "Html": "Since every edge (except for the boundary) is shared by two triangles, lines will be drawn twice. But there's a simple way to prevent this:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">foreach</span> (<span style=\"color:Blue;\">var</span> t <span style=\"color:Blue;\">in</span> mesh.Triangles)\n{\n    <span style=\"color:Green;\">// Check the 3 neighbor triangles / edges.</span>\n    <span style=\"color:Blue;\">for</span> (<span style=\"color:Blue;\">int</span> i = 0; i &lt; 3; i++)\n    {\n        <span style=\"color:Blue;\">var</span> n = t.GetNeighbor(i);\n\n        <span style=\"color:Green;\">// Consider each edge only once.</span>\n        <span style=\"color:Blue;\">if</span> (n == <span style=\"color:Blue;\">null</span> || t.ID &lt; n.ID)\n        {\n            <span style=\"color:Blue;\">var</span> v0 = t.GetVertex(i);\n            <span style=\"color:Blue;\">var</span> v1 = t.GetVertex((i + 1) % 3);\n\n            DrawLine(v0, v1);\n        }\n    }\n}\r\n</pre></div>Or just do:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Green;\">// Make sure vertices are numbered from 0 to n-1.</span>\nmesh.Renumber();\n\n<span style=\"color:Blue;\">var</span> vertices = mesh.Vertices.ToArray();\n\n<span style=\"color:Blue;\">foreach</span> (<span style=\"color:Blue;\">var</span> e <span style=\"color:Blue;\">in</span> mesh.Edges)\n{\n    <span style=\"color:Blue;\">var</span> v0 = vertices[e.P0];\n    <span style=\"color:Blue;\">var</span> v1 = vertices[e.P1];\n\n    DrawLine(v0, v1);\n}\r\n</pre></div>",
    "PostedDate": "2015-06-24T05:31:20.92-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": "2015-06-24T05:35:58.123-07:00"
  },
  {
    "Id": "1431699",
    "ThreadId": "640393",
    "Html": "hey thanks for the quick answer.\r<br />\nThe first solution doesn't work properly but the second does!<br />\n",
    "PostedDate": "2015-06-24T05:39:59.653-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1431700",
    "ThreadId": "640393",
    "Html": "Right, have a look at <a href=\"https://triangle.codeplex.com/wikipage?title=Topology\" rel=\"nofollow\">https://triangle.codeplex.com/wikipage?title=Topology</a> ... the vertex indices should be<br />\n<pre><code>            var v0 = t.GetVertex((i + 1) % 3);\n            var v1 = t.GetVertex((i + 2) % 3);</code></pre>\n\nnot tested, hope I got it right this time!<br />\n",
    "PostedDate": "2015-06-24T05:45:49.887-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1431702",
    "ThreadId": "640393",
    "Html": "yep now the other solution is working as well =)\r<br />\nthanks again!<br />\n",
    "PostedDate": "2015-06-24T05:52:29.63-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]