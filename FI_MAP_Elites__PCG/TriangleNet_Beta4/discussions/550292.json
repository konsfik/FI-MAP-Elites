[
  {
    "Id": "1261762",
    "ThreadId": "550292",
    "Html": "Thanks for all of your effort.  I was using the beta 3 version before, with inputGeometry and mesh.Triangulate(geometry) to generate the mesh.  For some reason, there was an endless loop in the model when I used maxArea to limit the size of the triangles.<br />\n<br />\nRight now I just updated to the new beta 4 version, I understand that I need to use Ipolygon instead of inputGeometry.<br />\n<br />\nFirstly the geometry is from an input file, can you give a similar example as version beta 3 to create a polygon?<br />\n<br />\n// Create InputGeometry using overloaded constructor which takes the number <br />\n// of input points as parameter.<br />\nvar geometry = new InputGeometry(8);<br />\n<br />\n// Add the points. <br />\ngeometry.AddPoint(0.0, 0.0); // Index 0<br />\ngeometry.AddPoint(3.0, 0.0); // Index 1 etc.<br />\ngeometry.AddPoint(3.0, 3.0);<br />\ngeometry.AddPoint(0.0, 3.0, 1); // Add a marker.<br />\ngeometry.AddPoint(1.0, 1.0);<br />\ngeometry.AddPoint(2.0, 1.0);<br />\ngeometry.AddPoint(2.0, 2.0);<br />\ngeometry.AddPoint(1.0, 2.0);<br />\n<br />\n// Add the segments. Notice the zero based indexing (in<br />\n// contrast to Triangle's file format).<br />\ngeometry.AddSegment(0, 1);<br />\ngeometry.AddSegment(1, 2);<br />\ngeometry.AddSegment(2, 3, 5); // Add a marker.<br />\ngeometry.AddSegment(3, 0, 5);<br />\ngeometry.AddSegment(4, 5);<br />\ngeometry.AddSegment(5, 6);<br />\ngeometry.AddSegment(6, 7);<br />\ngeometry.AddSegment(7, 4);<br />\n<br />\n// Add the hole.<br />\ngeometry.AddHole(1.5, 1.5);<br />\n<br />\nsecondly,  I just can not figure out where is the sub to generate the mesh.  The testApp has this code to generate the mesh as<br />\n<br />\nmesh = (Mesh)input.Triangulate(options, quality)<br />\n<br />\nit is a c++ code and I am using vb.net.  Can you show me how to use created polygon in vb.net to create a mesh?<br />\n<br />\nAnother question, it seems by default, the size of the resulting mesh is coarse in the center and fine near the boundary, any idea that I can automatically generate a roughly uniform mesh?<br />\n<br />\nMany thanks.<br />\n<br />\nVictor<br />\n",
    "PostedDate": "2014-07-01T15:42:21.003-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1261853",
    "ThreadId": "550292",
    "Html": "Have a look at the <a href=\"https://triangle.codeplex.com/wikipage?title=From%20Beta%203%20To%204\" rel=\"nofollow\">From Beta 3 To 4</a> page. The docs will be updated when Beta 4 is released.<br />\n<br />\nEDIT: regarding the endless loop: try reducing the minimum angle or don't set it at all. Instead use the smoother to improve mesh quality.<br />\n<br />\nEDIT2: regarding VB.NET: just use a code converter like <a href=\"http://converter.telerik.com/\" rel=\"nofollow\">http://converter.telerik.com/</a><br />\n<br />\nHere's the code, using Beta 4:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">static</span> <span style=\"color:Blue;\">void</span> Test()\n{\n    <span style=\"color:Green;\">// Create a Polygon.</span>\n    <span style=\"color:Blue;\">var</span> poly = <span style=\"color:Blue;\">new</span> Polygon(8);\n\n    <span style=\"color:Green;\">// Add the points.</span>\n    poly.Add(<span style=\"color:Blue;\">new</span> Vertex(0.0, 0.0)); <span style=\"color:Green;\">// Index 0</span>\n    poly.Add(<span style=\"color:Blue;\">new</span> Vertex(3.0, 0.0)); <span style=\"color:Green;\">// Index 1 etc.</span>\n    poly.Add(<span style=\"color:Blue;\">new</span> Vertex(3.0, 3.0));\n    poly.Add(<span style=\"color:Blue;\">new</span> Vertex(0.0, 3.0, 1)); <span style=\"color:Green;\">// Add a marker.</span>\n    poly.Add(<span style=\"color:Blue;\">new</span> Vertex(1.0, 1.0));\n    poly.Add(<span style=\"color:Blue;\">new</span> Vertex(2.0, 1.0));\n    poly.Add(<span style=\"color:Blue;\">new</span> Vertex(2.0, 2.0));\n    poly.Add(<span style=\"color:Blue;\">new</span> Vertex(1.0, 2.0));\n\n    <span style=\"color:Green;\">// Add the segments. Notice the zero based indexing (in</span>\n    <span style=\"color:Green;\">// contrast to Triangle&#39;s file format).</span>\n    poly.Add(<span style=\"color:Blue;\">new</span> Edge(0, 1));\n    poly.Add(<span style=\"color:Blue;\">new</span> Edge(1, 2));\n    poly.Add(<span style=\"color:Blue;\">new</span> Edge(2, 3, 5)); <span style=\"color:Green;\">// Add a marker.</span>\n    poly.Add(<span style=\"color:Blue;\">new</span> Edge(3, 0, 5));\n    poly.Add(<span style=\"color:Blue;\">new</span> Edge(4, 5));\n    poly.Add(<span style=\"color:Blue;\">new</span> Edge(5, 6));\n    poly.Add(<span style=\"color:Blue;\">new</span> Edge(6, 7));\n    poly.Add(<span style=\"color:Blue;\">new</span> Edge(7, 4));\n\n    <span style=\"color:Green;\">// Add the hole.</span>\n    poly.Holes.Add(<span style=\"color:Blue;\">new</span> Point(1.5, 1.5));\n\n    <span style=\"color:Green;\">// Setting only a MinimumAngle constraint will produce coarse meshes by default. To get</span>\n    <span style=\"color:Green;\">// fine meshes, add a MaximumArea constraint. Make sure to use a reasonable value here.</span>\n\n    <span style=\"color:Blue;\">var</span> quality = <span style=\"color:Blue;\">new</span> QualityOptions()\n    {\n        MinimumAngle = 25,\n        MaximumArea = 0.5\n    };\n\n    <span style=\"color:Green;\">// Triangulate the polygon.</span>\n    <span style=\"color:Blue;\">var</span> mesh = poly.Triangulate(quality);\n    \n    <span style=\"color:Blue;\">var</span> smoother = <span style=\"color:Blue;\">new</span> TriangleNet.Smoothing.SimpleSmoother();\n\n    <span style=\"color:Green;\">// Optional: do some smoothing.</span>\n    smoother.Smooth(mesh);\n\n    <span style=\"color:Blue;\">foreach</span> (<span style=\"color:Blue;\">var</span> t <span style=\"color:Blue;\">in</span> mesh.Triangles)\n    {\n        <span style=\"color:Green;\">// Do something with the mesh ...</span>\n    }\n}\r\n</pre></div>",
    "PostedDate": "2014-07-02T02:02:43.54-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1262023",
    "ThreadId": "550292",
    "Html": "Thanks for your quick reply. I have an error at poly.triangulate(quality) saying that triangulate is not a member of TriangleNet.Geometry.polygon.\r<br />\n<br />\nI checked class polygon and can not find &quot;triangulate&quot;.  Do I miss anything there?  Or is there another &quot;polygon&quot; defined in another place?\r<br />\n<br />\nImports T = TriangleNet\r<br />\nImports TG = TriangleNet.Geometry\r<br />\nImports TR = TriangleNet.Rendering\r<br />\nImports TM = TriangleNet.Meshing<br />\n<pre><code>Private Sub triangle()\n    Dim poly As TG.Polygon = New TG.Polygon(60)\n    Dim vertex As TG.Vertex\n    Dim edge As TG.Edge\n    Dim mesh As T.Mesh = New T.Mesh\n    Dim quality As TM.QualityOptions = New TM.QualityOptions\n    Dim options As TM.ConstraintOptions = New TM.ConstraintOptions\n    Dim polyline As csPolyline = New csPolyline  ' this is my only class\n    Dim i As Integer\n    Dim maxEdgeLength As Double = -0.1, edgeLength As Double, maxArea As Double\n    If myFeature.polyline.Length &gt; 0 Then polyline = myFeature.polyline(0)\n    For i = 0 To polyline.NumPoints - 2\n        edgeLength = Math.Sqrt((polyline.x(i + 1) - polyline.x(i)) ^ 2 + (polyline.y(i + 1) - polyline.y(i)) ^ 2)\n        If maxEdgeLength &lt; edgeLength Then maxEdgeLength = edgeLength\n    Next\n    maxArea = maxEdgeLength * maxEdgeLength * 0.5 * Math.Sqrt(3.0) / 2.0\n\n\n    For i = 0 To polyline.NumPoints - 1\n        'geometry.AddPoint(polyline.x(i), polyline.y(i))\n        vertex = New TG.Vertex(polyline.x(i), polyline.y(i))\n        poly.Add(vertex)\n        'geometry.Points.Add(vertex)\n    Next\n\n    For i = 0 To polyline.NumPoints - 1\n        If i &lt; polyline.NumPoints - 1 Then\n            'geometry.AddSegment(i, i + 1)\n            edge = New TG.Edge(i, i + 1)\n        Else\n            'geometry.AddSegment(i, 0)\n            edge = New TG.Edge(i, i + 0)\n        End If\n        poly.Add(edge)\n    Next\n    'geometry.AddPoint(1511176.0, 1429892.0)\n    'geometry.AddPoint(1510914.0, 1429535.0)\n\n\n    quality.MinimumAngle = 25.0\n    quality.MaximumAngle = 90.0\n    'quality.MaximumArea = maxArea\n\n    Try 'Open file and trap any errors using handler\n        'mesh.Triangulate(geometry)\n        mesh = poly.triangulate(quality)             ' that is where the error is during compile &quot;triangulate is not a member of TriangleNet.Geometry.polygon&quot;\n        'mesh.Behavior.MaxArea = maxArea\n        'mesh.Refine()\n    Catch ex As Exception\n        MessageBox.Show(&quot;Error: mesh:Triangulate&quot;)\n    Finally\n    End Try\n   ' where add smooth here\n\n\n\n    MessageBox.Show(&quot;mesh done&quot;)\n    'For Each element In mesh.Triangles\n    'polyline = New csPolyline\n    'polyline.addPoint(element.GetVertex(0).X, element.GetVertex(0).Y)\n    'polyline.addPoint(element.GetVertex(1).X, element.GetVertex(1).Y)\n    'polyline.addPoint(element.GetVertex(2).X, element.GetVertex(2).Y)\n    'polyline.addPoint(element.GetVertex(0).X, element.GetVertex(0).Y)\n    'csFeature.drawPolyline(polyline, myPenSelected, mySymbolSize)\n    'Next\nEnd Sub</code></pre>\n\n",
    "PostedDate": "2014-07-02T09:17:14.32-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1262053",
    "ThreadId": "550292",
    "Html": "Right. <code>Triangulate</code> is actually an extension method on the <code>IPolygon</code> interface, which is available if you import the <code>TriangleNet.Geometry</code> namespace.<br />\n<br />\nYou might want to use the <code>GenericMesher</code> (in the <code>TriangleNet.Meshing</code> namespace) directly:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">var</span> mesher = <span style=\"color:Blue;\">new</span> GenericMesher();\n<span style=\"color:Blue;\">var</span> mesh = mesher.Triangulate(poly);\r\n</pre></div>EDIT: be careful with setting large <em>minimum</em> or small <em>maximum angles</em> (like <code>quality.MaximumAngle = 90.0</code>) AND maximum area. If mesh creation doesn't converge, relax the constraints.<br />\n",
    "PostedDate": "2014-07-02T10:17:20.49-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1262075",
    "ThreadId": "550292",
    "Html": "Great, It works now. Thanks so much, WO.<br />\n",
    "PostedDate": "2014-07-02T11:11:19.617-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]